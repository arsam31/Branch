// <auto-generated />
using System;
using Branch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Branch.Data.Migrations
{
    [DbContext(typeof(BranchContext))]
    [Migration("20190704075353_seed on modelcreating and initialize dummydata")]
    partial class seedonmodelcreatingandinitializedummydata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Branch.Data.Core.Domain.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<int>("Level");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<long?>("ParentId");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Branch.Data.Core.Domain.Comments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Audio");

                    b.Property<string>("Body");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Document");

                    b.Property<int>("Fk_PostId");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<long?>("PostId");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.Property<string>("Video");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Branch.Data.Core.Domain.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Audio");

                    b.Property<string>("Body");

                    b.Property<long?>("CategoryId");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Document");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<long?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.Property<string>("Video");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Branch.Data.Core.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApproveDate");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<long?>("Modifiedby");

                    b.Property<string>("Password");

                    b.Property<string>("Remarks");

                    b.Property<string>("Role");

                    b.Property<int>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApproveDate = new DateTime(1979, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1979, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "arsamrahmaan31@gmail.com",
                            FirstName = "Arsam",
                            IsActive = true,
                            IsApproved = true,
                            LastName = "Rahmaan",
                            Mobile = "03367065720",
                            ModifiedDate = new DateTime(1979, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modifiedby = 2L,
                            Password = "1234",
                            Remarks = "Awesome",
                            Role = "admin",
                            Status = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Branch.Data.Core.Domain.Comments", b =>
                {
                    b.HasOne("Branch.Data.Core.Domain.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Branch.Data.Core.Domain.Post", b =>
                {
                    b.HasOne("Branch.Data.Core.Domain.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
